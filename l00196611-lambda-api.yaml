AWSTemplateFormatVersion: '2010-09-09'
Description: Birthday Present Tracker API with dummy data

Parameters:
  DBUsername:
    Description: Username used in interactions with RDS instance
    Type: String
    Default: admin
    MinLength: 1
    MaxLength: 16
    AllowedPattern: '^[a-zA-Z][a-zA-Z0-9_]*$'
    ConstraintDescription: "Must start with a letter. Only alphanumeric characters, underscores permitted"
  DBPassword:
    Description: Password used for user to access RDS database instance
    Type: String
    NoEcho: true
    MinLength: 8
    MaxLength: 40
    AllowedPattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@#$_!%*?&\-])[A-Za-z\d@#$_!%*?&\-]{8,40}$'
    ConstraintDescription: "8-40 characters, must contain uppercase, lowercase, number, and one special char from (@#$_!%*?&-)"
  DBName:
    Description: Name of the RDS database
    Type: String
    Default: birthdayDb
    AllowedPattern: '^[a-zA-Z0-9_]+$'
    ConstraintDescription: "Only alphanumeric characters, underscores permitted"
  LambdaRuntime:
    Description: Python version in use
    Type: String
    Default: python3.12
    AllowedValues:
      - python3.9
      - python3.10
      - python3.11
      - python3.12
  LambdaArchitecture:
    Description: OS used for Lambda Powertools
    Type: String
    Default: x86_64
    AllowedValues:
      - x86_64
      - arm64
  LambdaCodeBucket:
    Description: Name of S3 bucket where Lambda deployment package is stored
    Type: String
    MinLength: 3
    MaxLength: 63
    AllowedPattern: '^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$'
    ConstraintDescription: "Must be valid s3 bucket name - lowercase letters, numbers, full stops, dashes"
  LambdaCodeBucketKey:
    Description: File name within s3 bucket for the Lambda deployment python package
    Type: String
    MinLength: 1
    AllowedPattern: '^(?!/)[^\s]+$'
    ConstraintDescription: "Cannot be empty, cannot start with /, spaces not allowed"
  EnvironmentName:
    Description: Environment in use for API Gateway (Dev / Prod)
    Type: String
    AllowedValues:
      - Dev
      - Prod
  ResourceSuffix:
    Description: Append this to resource names in dev env to avoid clashes between dev and prod envs
    Type: String
    Default: ""
    AllowedPattern: '^[a-zA-Z0-9-]*$'
    ConstraintDescription: "Only letters, numbers, dashes allowed"
  DeploymentId:
    Description: Versioning to force API deployment on each push
    Type: String
    Default: "1"
    AllowedPattern: '^[0-9]+$'
    ConstraintDescription: "Must be numeric"

Conditions:
  IsDevEnvironment:
    Fn::Equals:
      - !Ref EnvironmentName
      - Dev

Mappings:
  PythonRuntimeToLayer:
    python3.9:
      Layer: python39
    python3.10: 
      Layer: python310
    python3.11: 
      Layer: python311
    python3.12: 
      Layer: python312
  LowercaseEnvironment:
    Dev:
      Name: dev
    Prod:
      Name: prod


Resources:
  BirthdayPresentTrackerVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
  
  BirthdayPresentTrackerSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: !Ref "AWS::Region"
      VpcId: !Ref BirthdayPresentTrackerVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
  
  BirthdayPresentTrackerSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: !Ref "AWS::Region"
      VpcId: !Ref BirthdayPresentTrackerVPC
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
  
  BirthdayPresentTrackerDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for Birthday Present Tracker RDS Instance
      SubnetIds:
        - !Ref BirthdayPresentTrackerSubnetA
        - !Ref BirthdayPresentTrackerSubnetB
  
  BirthdayPresentTrackerLambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Lambda security group with outbound access
      VpcId: !Ref BirthdayPresentTrackerVPC
  
  BirthdayPresentTrackerLambdaSecurityGroupEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: !Ref BirthdayPresentTrackerLambdaSecurityGroup
      IpProtocol: -1
      CidrIp: 0.0.0.0/0
  
  BirthdayPresentTrackerRDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for RDS MySQL
      VpcId: !Ref BirthdayPresentTrackerVPC
  
  BirthdayPresentTrackerRDSIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref BirthdayPresentTrackerRDSSecurityGroup
      IpProtocol: tcp
      FromPort: 3306
      ToPort: 3306
      SourceSecurityGroupId: !Ref BirthdayPresentTrackerLambdaSecurityGroup
  
  BirthdayPresentTrackerSecretsManagerEndpointSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Secrets Manager VPC Endpoint
      VpcId: !Ref BirthdayPresentTrackerVPC

  
  BirthdayPresentTrackerSecretsManagerIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref BirthdayPresentTrackerSecretsManagerEndpointSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      SourceSecurityGroupId: !Ref BirthdayPresentTrackerLambdaSecurityGroup
  
  BirthdayPresentTrackerDBSecret:
    Type: AWS::SecretsManager::Secret
    DeletionPolicy:
      Fn::If:
        - IsDevEnvironment
        - Delete
        - Retain
    UpdateReplacePolicy:
      Fn::If:
        - IsDevEnvironment
        - Delete
        - Retain
    Properties:
      Name:
        Fn::Sub:
          - "BirthdayPresentTrackerDBSecret${Suffix}"
          - Suffix:
              Fn::If:
                - IsDevEnvironment
                - !Ref ResourceSuffix
                - ""
      Description: RDS credentials for Birthday Present Tracker DB in use for API
      SecretString: !Sub '{"username": "${DBUsername}", "password": "${DBPassword}", "dbname": "${DBName}"}'
  
  BirthdayPresentTrackerSecretsManagerEndpoint:
    Type: AWS::EC2::VPCEndpoint
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      VpcId: !Ref BirthdayPresentTrackerVPC
      ServiceName: !Sub com.amazonaws.${AWS::Region}.secretsmanager
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds:
        - !Ref BirthdayPresentTrackerSubnetA
        - !Ref BirthdayPresentTrackerSubnetB
      SecurityGroupIds:
        - !Ref BirthdayPresentTrackerSecretsManagerEndpointSecurityGroup
    
  BirthdayPresentTrackerRDSInstance:
    Type: AWS::RDS::DBInstance
    DependsOn: 
      - BirthdayPresentTrackerSecretsManagerEndpoint
      - BirthdayPresentTrackerDBSecret
    DeletionPolicy:
      Fn::If:
        - IsDevEnvironment
        - Delete
        - Retain
    UpdateReplacePolicy:
      Fn::If:
        - IsDevEnvironment
        - Delete
        - Retain
    Properties:
      DBInstanceIdentifier: 
        Fn::Sub:
          - "birthday-present-tracker-database${Suffix}"
          - Suffix:
              Fn::If:
                - IsDevEnvironment
                - !Ref ResourceSuffix
                - ""
      DBSubnetGroupName: !Ref BirthdayPresentTrackerDBSubnetGroup
      AllocatedStorage: 20
      DBInstanceClass: db.t3.micro
      Engine: mysql
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Sub '{{resolve:secretsmanager:BirthdayPresentTrackerDBSecret${ResourceSuffix}:SecretString:password}}'
      DBName: !Ref DBName
      VPCSecurityGroups:
        - !GetAtt BirthdayPresentTrackerRDSSecurityGroup.GroupId
      PubliclyAccessible: false
      # This is disabled for quicker testing
      BackupRetentionPeriod: 0
      DeletionProtection: false
      MultiAZ: false
  
  BirthdayPresentTrackerLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: 
        Fn::Sub:
        - "BirthdayPresentTrackerLambdaExecutionRole${Suffix}"
        - Suffix:
            Fn::If:
              - IsDevEnvironment
              - !Ref ResourceSuffix
              - ""
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: LambdaSecretsAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !Ref BirthdayPresentTrackerDBSecret

  BirthdayPresentTrackerLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: 
        Fn::Sub: 
          - "BirthdayPresentTrackerApiHandler${Suffix}"
          - Suffix:
              Fn::If:
                - IsDevEnvironment
                - !Ref ResourceSuffix
                - ""
      Runtime: !Ref LambdaRuntime
      Handler: index.lambda_handler
      Role: !GetAtt BirthdayPresentTrackerLambdaRole.Arn
      VpcConfig:
        SubnetIds:
          - !Ref BirthdayPresentTrackerSubnetA
          - !Ref BirthdayPresentTrackerSubnetB
        SecurityGroupIds:
          - !Ref BirthdayPresentTrackerLambdaSecurityGroup
      Timeout: 15
      Layers:
          - Fn::Sub:
            - arn:${Partition}:lambda:${Region}:017000801446:layer:AWSLambdaPowertoolsPythonV3-${Layer}-${Architecture}:18
            - Partition: !Ref AWS::Partition
              Region: !Ref AWS::Region
              Layer: !FindInMap [PythonRuntimeToLayer, !Ref LambdaRuntime, Layer]
              Architecture: !Ref LambdaArchitecture
      Environment:
        Variables:
          DB_HOST: !GetAtt BirthdayPresentTrackerRDSInstance.Endpoint.Address
          DB_SECRET_NAME: !Ref BirthdayPresentTrackerDBSecret
      Code:
        S3Bucket: !Ref LambdaCodeBucket
        S3Key: !Ref LambdaCodeBucketKey
    
  BirthdayPresentTrackerApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: 
        Fn::Sub:
          - "BirthdayPresentTrackerApi${Suffix}"
          - Suffix:
              Fn::If:
                - IsDevEnvironment
                - !Ref ResourceSuffix
                - ""
      Description: API returning dummy data from db
      EndpointConfiguration:
        Types: ["REGIONAL"]
  
  BirthdayPresentTrackerResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref BirthdayPresentTrackerApi
      ParentId: !GetAtt BirthdayPresentTrackerApi.RootResourceId
      PathPart: birthdays
  
  BirthdayPresentTrackerRequestValidator:
    Type: AWS::ApiGateway::RequestValidator
    Properties:
      RestApiId: !Ref BirthdayPresentTrackerApi
      Name: Validate parameters and payloads
      ValidateRequestBody: true
      ValidateRequestParameters: true
  
  BirthdayPresentTrackerPostRequestModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: !Ref BirthdayPresentTrackerApi
      Name: BirthdayPresentTrackerPostRequestModel
      ContentType: application/json
      Schema:
        {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "BirthdayPresentTrackerPostModel",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 200,
              "minLength": 1
            },
            "birthday": {
              "type": "string",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "description": Date of birth in YYYY-MM-DD format
            },
            "idea": {
              "type": "string",
              "maxLength": 200,
              "minLength": 1
            },
            "link": {
              "type": "string",
              "maxLength": 400
            }
          },
          "required": ["name", "birthday", "idea"]
        }

  BirthdayPresentTrackerPutRequestModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: !Ref BirthdayPresentTrackerApi
      Name: BirthdayPresentTrackerPutRequestModel
      ContentType: application/json
      Schema:
        {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "BirthdayPresentTrackerPutModel",
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
            },
            "name": {
              "type": "string",
              "maxLength": 200,
              "minLength": 1
            },
            "birthday": {
              "type": "string",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "description": Date of birth in YYYY-MM-DD format
            },
            "idea": {
              "type": "string",
              "maxLength": 200,
              "minLength": 1
            },
            "link": {
              "type": "string",
              "maxLength": 400
            }
          },
          "required": ["id", "name", "birthday", "idea"]
        }
  
  BirthdayPresentTrackerDeleteRequestModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: !Ref BirthdayPresentTrackerApi
      Name: BirthdayPresentTrackerDeleteRequestModel
      ContentType: application/json
      Schema:
        {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "BirthdayPresentTrackerDeleteModel",
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            }
          },
          "required": ["id"]
        }
  
  BirthdayPresentTrackerGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref BirthdayPresentTrackerApi
      ResourceId: !Ref BirthdayPresentTrackerResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub:
          - arn:${AWS::Partition}:apigateway:${Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
          - Region: !Ref "AWS::Region"
            LambdaArn: !GetAtt BirthdayPresentTrackerLambda.Arn
  
  BirthdayPresentTrackerPutMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref BirthdayPresentTrackerApi
      ResourceId: !Ref BirthdayPresentTrackerResource
      HttpMethod: PUT
      AuthorizationType: NONE
      RequestModels:
        "application/json": !Ref BirthdayPresentTrackerPutRequestModel
      RequestValidatorId: !Ref BirthdayPresentTrackerRequestValidator
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub:
          - arn:${AWS::Partition}:apigateway:${Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
          - Region: !Ref "AWS::Region"
            LambdaArn: !GetAtt BirthdayPresentTrackerLambda.Arn
  
  BirthdayPresentTrackerPostMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref BirthdayPresentTrackerApi
      ResourceId: !Ref BirthdayPresentTrackerResource
      HttpMethod: POST
      AuthorizationType: NONE
      RequestModels:
        "application/json": !Ref BirthdayPresentTrackerPostRequestModel
      RequestValidatorId: !Ref BirthdayPresentTrackerRequestValidator
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub:
          - arn:${AWS::Partition}:apigateway:${Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
          - Region: !Ref "AWS::Region"
            LambdaArn: !GetAtt BirthdayPresentTrackerLambda.Arn

  BirthdayPresentTrackerDeleteMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref BirthdayPresentTrackerApi
      ResourceId: !Ref BirthdayPresentTrackerResource
      HttpMethod: DELETE
      AuthorizationType: NONE
      RequestModels:
        "application/json": !Ref BirthdayPresentTrackerDeleteRequestModel
      RequestValidatorId: !Ref BirthdayPresentTrackerRequestValidator
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub:
          - arn:${AWS::Partition}:apigateway:${Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
          - Region: !Ref "AWS::Region"
            LambdaArn: !GetAtt BirthdayPresentTrackerLambda.Arn
  
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref BirthdayPresentTrackerLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${BirthdayPresentTrackerApi}/*/*"
  
  BirthdayPresentTrackerApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - BirthdayPresentTrackerGetMethod
      - BirthdayPresentTrackerPostMethod
      - BirthdayPresentTrackerPutMethod
      - BirthdayPresentTrackerDeleteMethod
    Properties:
      RestApiId: !Ref BirthdayPresentTrackerApi
      StageName: !FindInMap [LowercaseEnvironment, !Ref EnvironmentName, Name]
      Description: !Sub "Deployed with descriptor: ${DeploymentId}"

Outputs:
  ApiEndpoint:
    Description: "Endpoint URL for API"
    Value: 
      Fn::Sub:
      - "https://${ApiId}.execute-api.${Region}.amazonaws.com/${Env}/birthdays"
      - ApiId: !Ref BirthdayPresentTrackerApi
        Region: !Ref "AWS::Region"
        Env: !FindInMap [LowercaseEnvironment, !Ref EnvironmentName, Name]